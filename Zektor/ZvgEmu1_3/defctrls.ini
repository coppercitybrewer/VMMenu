;
; Setting classes - There are three classes of controller settings:
;
;   o "bin_" indicates a binary state controller. This means something that
;     only has two states such as a button, trigger, two-way switch, etc.
;
;   o "ana_" is an analog controller, which means there is more than two
;     states. This is for analog joysticks (where the position of the stick
;     is used directly, not just which direction it's been moved in), and
;     games that used customized consoles (flightsticks, the Star Wars
;     controller, etc).
;    
;   o "bal_" means a ballistic controller such as a trackball or spinner of
;     some sort.
;
; These prefixes apply both to the name for a controller entry (aka the right
; side of the equals sign, or rvalue), as well as to the names of controller
; settings (aka the left side of the equals sign, or lvalue). So if a
; controller setting is "bin_left" then that means it can only have a "bin_"
; setting of some sort. Using an analog or ballistic setting value such as
; "bal_wingman_spinner" has undefined behavior, and is not recommended.
;
;
; The following is a list of valid controller settings. It is for reference
; only, do NOT uncomment any of these lines!
;
; Allowable keyboard settings -
;
; bin_key_f1
; bin_key_f2
; bin_key_f3
; bin_key_f4
; bin_key_f5
; bin_key_f6
; bin_key_f7
; bin_key_f8
; bin_key_f9
; bin_key_f10
; bin_key_f11
; bin_key_f12
; bin_key_printscreen
; bin_key_scrollock
; bin_key_pause
; bin_key_tilde
; bin_key_1
; bin_key_2
; bin_key_3
; bin_key_4
; bin_key_5
; bin_key_6
; bin_key_7
; bin_key_8
; bin_key_9
; bin_key_0
; bin_key_minus
; bin_key_equals
; bin_key_backslash
; bin_key_backspace
; bin_key_insert
; bin_key_home
; bin_key_pageup
; bin_key_numlock
; bin_key_padslash
; bin_key_padasterisk
; bin_key_padminus
; bin_key_tab
; bin_key_q
; bin_key_w
; bin_key_e
; bin_key_r
; bin_key_t
; bin_key_y
; bin_key_u
; bin_key_i
; bin_key_o
; bin_key_p
; bin_key_leftbracket
; bin_key_rightbracket
; bin_key_enter
; bin_key_delete
; bin_key_end
; bin_key_pagedown
; bin_key_pad7
; bin_key_pad8
; bin_key_pad9
; bin_key_padplus
; bin_key_capslock
; bin_key_a
; bin_key_s
; bin_key_d
; bin_key_f
; bin_key_g
; bin_key_h
; bin_key_j
; bin_key_k
; bin_key_l
; bin_key_semicolon
; bin_key_quote
; bin_key_pad4
; bin_key_pad5
; bin_key_pad6
; bin_key_leftshift
; bin_key_z
; bin_key_x
; bin_key_c
; bin_key_v
; bin_key_b
; bin_key_n
; bin_key_m
; bin_key_comma
; bin_key_period
; bin_key_slash
; bin_key_rightshift
; bin_key_uparrow
; bin_key_pad1
; bin_key_pad2
; bin_key_pad3
; bin_key_padenter
; bin_key_leftctrl
; bin_key_leftalt
; bin_key_spacebar
; bin_key_rightalt
; bin_key_rightctrl
; bin_key_leftarrow
; bin_key_downarrow
; bin_key_rightarrow
; bin_key_pad0
; bin_key_padperiod
;
; Allowable analog and non-analog joystick settings -
;   This is the standard sort of joystick one sticks in game port on a PC.
;   Joystick "A" and joystick "B" are distinguished, but some joysticks use
;   both pots to add extra functionality (such as the Microsoft Sidewinder).
;   The default settings in this file do NOT reflect such specialized sticks.
;   NOTE: Not all joysticks are analog.
;
; ana_joystick_ax
; ana_joystick_ay
; ana_joystick_bx
; ana_joystick_by
; bin_joystick_aleft
; bin_joystick_aright
; bin_joystick_aup
; bin_joystick_adown
; bin_joystick_abutton1
; bin_joystick_abutton2
; bin_joystick_bleft
; bin_joystick_bright
; bin_joystick_bup
; bin_joystick_bdown
; bin_joystick_bbutton1
; bin_joystick_bbutton2
;
; Allowable Wingman Warrior settings -
;
; bin_wingman_north
; bin_wingman_south
; bin_wingman_east
; bin_wingman_west
; bin_wingman_top
; bin_wingman_thumb
; bin_wingman_trigger
; bin_wingman_middle
; bin_wingman_joyleft
; bin_wingman_joyright
; bin_wingman_joyup
; bin_wingman_joydown
; bin_wingman_spinner_left
; bin_wingman_spinner_right
; ana_wingman_joyx
; ana_wingman_joyy
; bal_wingman_spinner
;
; Allowable Microsoft Sidewinder Gamepad settings -
;   (Note: Each gamepad is denoted by number, so these control values are valid
;          from bin_sw1_* to bin_sw4_* for Gamepad #1, #2, etc)
;
; bin_sw1_up
; bin_sw1_down
; bin_sw1_right
; bin_sw1_left
; bin_sw1_a
; bin_sw1_b
; bin_sw1_c
; bin_sw1_x
; bin_sw1_y
; bin_sw1_z
; bin_sw1_leftfinger
; bin_sw1_rightfinger
; bin_sw1_start
; bin_sw1_m
;
;
; Allowable mouse settings -
;
; bin_mouse_leftbutton
; bin_mouse_rightbutton
; bin_mouse_middlebutton
; ana_mouse_joyx
; ana_mouse_joyy
; bal_mouse_ballisticsx
; bal_mouse_ballisticsy


; Controller Setting Syntax -
;
; The majority of the controller settings are done through simple assignment
; statements, using an equals sign. You assign a specific control for a
; game with one or more valid controller values, or a previously defined
; macro. For example:
;
;     bin_coin=(bin_key_3)
;
; specifies that the '3' key on the keyboard is assigned to the coin-up
; control. Hitting '3' then adds credit to the game. You can specify more
; than one value after the equals sign, as long as they are seperated by
; commas. You can also assign one or more controller values to a variable
; (I.E. something that is not a control name in a game or a controller
; setting), and then use that variable (aka macro) as a valid control setting.
; For example:
;
;    retro_coin=(bin_key_3, bin_key_f3, bin_key_c)
;    bin_coin=(retro_coin)
;
; This creates a macro called 'retro_coin' that represents three different
; valid inputs. Assigning that macro to the 'bin_coin' control then means
; that a user can hit the '3', F3, or 'c' key on their keyboard to add
; a credit to the game.
;
; Game Controller Structure -
;
; The structure of the settings for a game is pretty simple. You have a
; bracketed assignment which indicates which game the settings are for,
; followed by one or more sets of controls inside braces. Each set of controls
; is labeled with a name. For example:
;
;       [game="Example"]
;       {
;               [config="Default"]
;               {
;               bin_foo=(bin_key_spacebar)
;               }
;       }
;
; This defines the controls for a game called Example. It contains a single
; control set definition called Default, which defines the 'foo' controller
; as being the space bar.
; There is no limit on the number of configuration sets a game may have.
; All configuration sets and game names must be inside quotes.


/****************************************************************************
 *
 * These are the default macro definitions for standard controller functions
 * in ZVGEmu. Changing these defaults will affect the majority of games
 * emulated by ZVGEmu. Not all game settings use these definitions.
 *
 * Note that with the two player macros, the first player is always given
 * the option of best controls (I.E. the Wingman Warrior) and will generally
 * have the same controls as for the single player macros. There are some
 * special cases where things had to be thrown out the window due to the
 * original game having wacked-out controls.
 *
 ***************************************************************************/

/*** Game Startup Macros ***/

; Standard 1st player and 2nd player start macros.
zvgemu_start1=(bin_key_1, bin_key_f1, bin_sw1_start)
zvgemu_start2=(bin_key_2, bin_key_f2, bin_sw2_start)
zvgemu_start3=(bin_key_f3, bin_sw2_start)
zvgemu_start4=(bin_key_f4, bin_sw2_start)

; Standard coin-insert macros.
zvgemu_coin=	(bin_key_3, bin_sw1_x)
zvgemu_coin1=	(zvgemu_coin)
zvgemu_coin2=	(bin_key_4, bin_sw2_x)
zvgemu_coin3=	(bin_key_5, bin_sw3_x)
zvgemu_coin4=	(bin_key_6, bin_sw4_x)

/*** Movement Macros ***/

; Standard 4-way directional movement controller settings.    [-Single-]
;   (For all one-player games and multi-player games that only do switch-off)
;
zvgemu_left=		(bin_key_leftarrow, bin_key_pad4, bin_joystick_aleft, bin_joystick_bleft, bin_wingman_joyleft, bin_key_s, bin_sw1_left, bin_key_r)
zvgemu_right=		(bin_key_rightarrow, bin_key_pad6, bin_joystick_aright, bin_joystick_bright, bin_wingman_joyright, bin_key_f, bin_sw1_right, bin_key_t)
zvgemu_up=		(bin_key_uparrow, bin_key_pad8, bin_joystick_aup, bin_joystick_bup, bin_wingman_joyup, bin_key_e, bin_sw1_up)
zvgemu_down=		(bin_key_downarrow, bin_key_pad2, bin_joystick_adown, bin_joystick_bdown, bin_wingman_joydown, bin_key_c, bin_sw1_down)

zvgemu_left_no_ana=	(bin_key_leftarrow, bin_key_pad4, bin_key_s, bin_sw1_left)
zvgemu_right_no_ana=	(bin_key_rightarrow, bin_key_pad6, bin_key_f, bin_sw1_right)
zvgemu_up_no_ana=	(bin_key_uparrow, bin_key_pad8, bin_key_e, bin_sw1_up)
zvgemu_down_no_ana=	(bin_key_downarrow, bin_key_pad2, bin_key_c, bin_sw1_down)

; Standard 4-way directional movement controller settings.    [-Multi-]
;   (For all two-player games that support simultaneous play.)
;
zvgemu_left_p1=	(bin_key_leftarrow, bin_joystick_aleft, bin_wingman_joyleft, bin_sw1_left)
zvgemu_right_p1=	(bin_key_rightarrow, bin_joystick_aright, bin_wingman_joyright, bin_sw1_right)
zvgemu_up_p1=		(bin_key_uparrow, bin_joystick_aup, bin_wingman_joyup, bin_sw1_up)
zvgemu_down_p1=	(bin_key_downarrow, bin_joystick_adown, bin_wingman_joydown, bin_sw1_down)
zvgemu_left_p2=	(bin_key_pad4, bin_joystick_bleft, bin_sw2_left)
zvgemu_right_p2=	(bin_key_pad6, bin_joystick_bright, bin_sw2_right)
zvgemu_up_p2=		(bin_key_pad8, bin_joystick_bup, bin_sw2_up)
zvgemu_down_p2=	(bin_key_pad2, bin_joystick_bdown, bin_sw2_down)

; Standard analog horizontal and vertical movement macros.
zvgemu_ana_horiz=	(ana_joystick_ax, ana_wingman_joyx, ana_mouse_joyx)
zvgemu_ana_vert=	(ana_joystick_ay, ana_wingman_joyy, ana_mouse_joyy)

/*** Fire and Action Macros ***/

; Standard "fire" button setting.                            [-Single-]
zvgemu_fire=		(bin_key_leftctrl, bin_key_rightctrl, bin_joystick_abutton1, bin_wingman_trigger, bin_mouse_leftbutton, bin_sw1_rightfinger, bin_sw1_c, bin_mouse_leftbutton, bin_key_p)

; Standard "action" button setting.                        [-Single-]
;   NOTE: Not all games use an action or second fire button.
zvgemu_action=	(bin_key_leftalt, bin_key_rightalt, bin_joystick_abutton2, bin_wingman_thumb, bin_mouse_rightbutton, bin_key_semicolon, bin_sw1_b, bin_key_o)

; Standard "fire" button setting.                            [-Multi-]
zvgemu_fire_p1=	(bin_key_leftctrl, bin_joystick_abutton1, bin_wingman_trigger, bin_sw1_rightfinger, bin_sw1_c, bin_mouse_leftbutton, bin_key_p)
zvgemu_fire_p2=	(bin_key_padenter, bin_joystick_bbutton1, bin_sw2_c)

; Standard "action" button setting.                        [-Multi-]
;   NOTE: Not all games use an action or second fire button.

zvgemu_action_p1=	(bin_key_leftalt, bin_joystick_abutton2, bin_wingman_thumb, bin_sw1_b)
zvgemu_action_p2=	(bin_key_pad0, bin_joystick_bbutton2, bin_sw2_b)

/*** Misc. Macros ***/

; Standard spinner controlle macro.
zvgemu_spinner=	(bal_wingman_spinner, bal_mouse_ballisticsx)

; Standard game self-test macro.
zvgemu_selftest=	(bin_key_f7)

; Standard game diagnostic step-thru macro (for stepping through diagnostics)
zvgemu_diagstep=	(bin_key_f8)
zvgemu_autoup=	(bin_key_f9)

/****************************************************************************
 * 
 * Individual Game Controller Settings -
 * 
 * These are the controller settings for each game in ZVGEmu. For each
 * game there is at least a Default control set, and usually several others.
 * 
 ***************************************************************************/

/* The default game controller configurations */

[game="Asteroids"]
{
	[config="Default"]
	{
		bin_left=(zvgemu_left, bin_wingman_spinner_left)
		bin_right=(zvgemu_right, bin_wingman_spinner_right)
		bin_fire=(zvgemu_fire)
		bin_thrust=(zvgemu_action)
		bin_hyperspace=(bin_key_spacebar, bin_joystick_adown, bin_wingman_middle, bin_sw1_m, bin_sw1_a)
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1, bin_wingman_top)
		bin_start2=(zvgemu_start2)
		bin_diagstep=(zvgemu_diagstep)
	}
}

[game="Major Havoc"]
{
	[config="Default"]
	{
		bin_coin1=(zvgemu_coin1)
		bin_coin2=(zvgemu_coin2)
		bin_coin3=(zvgemu_coin3)
		bin_diagstep=(zvgemu_diagstep)
		bin_p1jump=(zvgemu_fire_p1)
		bin_p1shield=(zvgemu_action_p1)
		bin_p2jump=(zvgemu_fire_p2)
		bin_p2shield=(zvgemu_action_p2)
		bin_rollerright=(zvgemu_right_no_ana, bin_wingman_spinner_right)
		bin_rollerleft=(zvgemu_left_no_ana, bin_wingman_spinner_left)
		ana_roller=(zvgemu_ana_horiz)
	}
}

[game="Return to Vax"]
{
	[config="Default"]
	{
		bin_coin1=(zvgemu_coin1)
		bin_coin2=(zvgemu_coin2)
		bin_coin3=(zvgemu_coin3)
		bin_diagstep=(zvgemu_diagstep)
		bin_p1jump=(zvgemu_fire_p1)
		bin_p1shield=(zvgemu_action_p1)
		bin_p2jump=(zvgemu_fire_p2)
		bin_p2shield=(zvgemu_action_p2)
		bin_rollerleft=(zvgemu_left_no_ana, bin_wingman_spinner_left)
		bin_rollerright=(zvgemu_right_no_ana, bin_wingman_spinner_right)
		ana_roller=(zvgemu_ana_horiz)
	}
}

[game="Space Duel"]
{
	[config="Default"]
	{
		bin_p1left=(zvgemu_left_p1, bin_wingman_spinner_left)
		bin_p1right=(zvgemu_right_p1, bin_wingman_spinner_right)
		bin_p1thrust=(zvgemu_action_p1)
		bin_p1fire=(zvgemu_fire_p1)
		bin_p1shield=(zvgemu_down_p1, bin_key_spacebar, bin_wingman_middle)
		bin_p2left=(zvgemu_left_p2)
		bin_p2right=(zvgemu_right_p2)
		bin_p2thrust=(zvgemu_action_p2)
		bin_p2fire=(zvgemu_fire_p2)
		bin_p2shield=(zvgemu_down_p2, bin_key_padplus)
		bin_select=(zvgemu_fire)
		bin_start1=(zvgemu_start1)
		bin_coin=(zvgemu_coin)
		bin_diagstep=(zvgemu_diagstep)
	}
}

[game="Gravitar"]
{
	[config="Default"]
	{
		bin_left=(zvgemu_left)
		bin_right=(zvgemu_right)
		bin_fire=(zvgemu_fire)
		bin_thrust=(zvgemu_action)
		bin_shield=(zvgemu_down, bin_key_spacebar, bin_wingman_middle)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_coin=(zvgemu_coin)
	}
}

[game="Black Widow"]
{
	[config="Default"]
	{
		bin_fireup=(zvgemu_up_p2, bin_wingman_north)
		bin_firedown=(zvgemu_down_p2, bin_wingman_south)
		bin_fireleft=(zvgemu_left_p2, bin_wingman_west)
		bin_fireright=(zvgemu_right_p2, bin_wingman_east)
		bin_moveup=(zvgemu_up_p1)
		bin_movedown=(zvgemu_down_p1)
		bin_moveleft=(zvgemu_left_p1)
		bin_moveright=(zvgemu_right_p1)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_coin=(zvgemu_coin)
	}
}

[game="Tempest"]
{
	[config="Default"]
	{
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_superzap=(zvgemu_action)
		bin_fire=(zvgemu_fire)
		bin_left=(zvgemu_left)
		bin_right=(zvgemu_right)
		bal_spinner=(zvgemu_spinner)
		bin_diagstep=(zvgemu_diagstep)
	}
}

[game="Tempest Tubes"]
{
	[config="Default"]
	{
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_superzap=(zvgemu_action)
		bin_fire=(zvgemu_fire)
		bin_left=(zvgemu_left)
		bin_right=(zvgemu_right)
		bal_spinner=(zvgemu_spinner)
		bin_diagstep=(zvgemu_diagstep)
	}
}

[game="Battlezone"]
{
	[config="Default"]
	{
		bin_leftforward=(bin_wingman_joyup, bin_joystick_aup, bin_key_a)
		bin_leftreverse=(bin_wingman_joydown, bin_joystick_adown, bin_key_z)
		bin_rightforward=(bin_wingman_north, bin_joystick_bup, bin_key_quote)
		bin_rightreverse=(bin_wingman_south, bin_joystick_bdown, bin_key_slash)
		bin_fire=(zvgemu_fire, bin_key_spacebar)
		bin_start1=(zvgemu_start1)
		bin_diagstep=(zvgemu_diagstep)
	}
}

[game="Red Baron"]
{
	[config="Default"]
	{
		ana_horizontal=(zvgemu_ana_horiz)
		ana_vertical=(zvgemu_ana_vert)
		bin_left=(zvgemu_left_no_ana)
		bin_right=(zvgemu_right_no_ana)
		bin_up=(zvgemu_up_no_ana)
		bin_down=(zvgemu_down_no_ana)
		bin_fire=(zvgemu_fire)
		bin_start1=(zvgemu_start1)
		bin_coin=(zvgemu_coin)
	}
}

[game="Asteroids Deluxe"]
{
	[config="Default"]
	{
		bin_left=(zvgemu_left, bin_wingman_spinner_left)
		bin_right=(zvgemu_right, bin_wingman_spinner_right)
		bin_thrust=(zvgemu_action)
		bin_fire=(zvgemu_fire)
		bin_shield=(bin_key_spacebar, bin_joystick_adown, bin_wingman_middle)
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
	}
}

[game="Lunar Lander"]
{
	[config="Default"]
	{
		bin_left=(zvgemu_left)
		bin_right=(zvgemu_right)
		bin_thrust=(zvgemu_fire)
		bin_abort=(zvgemu_action)
		bin_coin=(zvgemu_coin)
		bin_select=(zvgemu_fire)
		bin_start1=(zvgemu_start1)
		bin_diagstep=(zvgemu_diagstep)
	}
}

[game="Star Castle"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_fire=(zvgemu_fire)
		bin_thrust=(zvgemu_action)
		bin_left=(zvgemu_left, bin_wingman_spinner_left)
		bin_right=(zvgemu_right, bin_wingman_spinner_right)
	}
}

[game="Tail Gunner"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_left=(zvgemu_left_no_ana)
		bin_right=(zvgemu_right_no_ana)
		bin_up=(zvgemu_up_no_ana)
		bin_down=(zvgemu_down_no_ana)
		bin_fire=(zvgemu_fire)
		bin_shield=(zvgemu_action)
		ana_horiz=(zvgemu_ana_horiz)
		ana_vert=(zvgemu_ana_vert)
	}
}

[game="Ripoff"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_start1=(zvgemu_start1)
		bin_p1fire=(zvgemu_fire_p1)
		bin_p1thrust=(zvgemu_action_p1)
		bin_p1right=(zvgemu_right_p1, bin_wingman_spinner_right)
		bin_p1left=(zvgemu_left_p1, bin_wingman_spinner_left)
		bin_p2fire=(zvgemu_fire_p2)
		bin_p2thrust=(zvgemu_action_p2)
		bin_p2right=(zvgemu_right_p2)
		bin_p2left=(zvgemu_left_p2)
	}
}

[game="Sundance"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_grid=(bin_key_leftbracket)
		bin_suns2=(bin_key_p)
		bin_suns3=(bin_key_semicolon)
		bin_suns4=(bin_key_period)
		bin_rfire=(zvgemu_fire_p1)
		bin_rhatch1=(bin_key_pad7)
		bin_rhatch2=(bin_key_pad8)
		bin_rhatch3=(bin_key_pad9)
		bin_rhatch4=(bin_key_pad4)
		bin_rhatch5=(bin_key_pad5)
		bin_rhatch6=(bin_key_pad6)
		bin_rhatch7=(bin_key_pad1)
		bin_rhatch8=(bin_key_pad2)
		bin_rhatch9=(bin_key_pad3)
		bin_lfire=(zvgemu_fire_p2)
		bin_lhatch1=(bin_key_q)
		bin_lhatch2=(bin_key_w)
		bin_lhatch3=(bin_key_e)
		bin_lhatch4=(bin_key_a)
		bin_lhatch5=(bin_key_s)
		bin_lhatch6=(bin_key_d)
		bin_lhatch7=(bin_key_z)
		bin_lhatch8=(bin_key_x)
		bin_lhatch9=(bin_key_c)
	}
}

[game="Space Wars"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_option0=(bin_key_pad0)
		bin_option1=(bin_key_pad1)
		bin_option2=(bin_key_pad2)
		bin_option3=(bin_key_pad3)
		bin_option4=(bin_key_pad4)
		bin_option5=(bin_key_pad5)
		bin_option6=(bin_key_pad6)
		bin_option7=(bin_key_pad7)
		bin_option8=(bin_key_pad8)
		bin_option9=(bin_key_pad9)
		bin_lprleft=(zvgemu_left_p1)
		bin_lprright=(zvgemu_right_p1)
		bin_lpthrust=(zvgemu_action_p1)
		bin_lpfire=(zvgemu_fire_p1)
		bin_lphyper=(bin_key_spacebar, bin_wingman_middle)
		bin_rprleft=(zvgemu_left_p2)
		bin_rprright=(zvgemu_right_p2)
		bin_rpthrust=(zvgemu_action_p2)
		bin_rpfire=(zvgemu_fire_p2)
		bin_rphyper=(bin_key_padplus)
	}
}

[game="Barrier"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_p1left=(zvgemu_left_p1)
		bin_p1right=(zvgemu_right_p1)
		bin_p1forward=(zvgemu_up_p1)
		bin_p1reverse=(zvgemu_down_p1)
		bin_p1high=(zvgemu_fire_p1)
		bin_p2left=(zvgemu_left_p2)
		bin_p2right=(zvgemu_right_p2)
		bin_p2forward=(zvgemu_up_p2)
		bin_p2reverse=(zvgemu_down_p2)
		bin_p2high=(zvgemu_fire_p2)
	}
}

[game="War of the worlds"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_fire=(zvgemu_fire)
		bin_shields=(zvgemu_up)
		bin_right=(zvgemu_right)
		bin_left=(zvgemu_left)
	}
}

[game="Boxing Bugs"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_lcannon=(zvgemu_fire_p1)
		bin_lglove=(zvgemu_left)
		bin_rglove=(zvgemu_right)
		bin_punch=(zvgemu_action)
		bal_glove=(zvgemu_spinner)
		bin_aon=()
		bin_aoff=()
	}
}

[game="Demon"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_lleft=(zvgemu_left_p1)
		bin_lright=(zvgemu_right_p1)
		bin_lwalk=(zvgemu_action_p1)
		bin_lfire=(zvgemu_fire_p1)
		bin_lpanic=(bin_key_spacebar, bin_wingman_middle)
		bin_rleft=(zvgemu_left_p2)
		bin_rright=(zvgemu_right_p2)
		bin_rwalk=(zvgemu_action_p2)
		bin_rfire=(zvgemu_fire_p2)
		bin_rpanic=(bin_key_padplus)
	}
}

[game="Solar Quest"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_left=(zvgemu_left)
		bin_right=(zvgemu_right)
		bin_thrust=(zvgemu_action)
		bin_fire=(zvgemu_fire)
		bin_hyperspace=(bin_key_spacebar, bin_joystick_adown, bin_wingman_middle, bin_sw1_m, bin_sw1_a)
		bin_nova=(bin_key_x)
	}
}

[game="Armor Attack"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_lfire=(zvgemu_fire_p2)
		bin_lforward=(zvgemu_up_p2)
		bin_lright=(zvgemu_right_p2)
		bin_lleft=(zvgemu_left_p2)
		bin_rfire=(zvgemu_fire_p1)
		bin_rforward=(zvgemu_up_p1)
		bin_rright=(zvgemu_right_p1)
		bin_rleft=(zvgemu_left_p1)
	}
}

[game="Speed Freak"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_gas=(zvgemu_fire)
		bin_gear1=(bin_key_5, bin_wingman_north)
		bin_gear2=(bin_key_6, bin_wingman_east)
		bin_gear3=(bin_key_7, bin_wingman_south)
		bin_gear4=(bin_key_8, bin_wingman_west)
		bin_steerleft=(zvgemu_left)
		bin_steerright=(zvgemu_right)
	}
}

[game="Warrior"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_lpright=(zvgemu_right_p1)
		bin_lpleft=(zvgemu_left_p1)
		bin_lpup=(zvgemu_up_p1)
		bin_lpdown=(zvgemu_down_p1)
		bin_lpsword=(zvgemu_fire_p1)
		bin_rpright=(zvgemu_right_p2)
		bin_rpleft=(zvgemu_left_p2)
		bin_rpup=(zvgemu_up_p2)
		bin_rpdown=(zvgemu_down_p2)
		bin_rpsword=(zvgemu_fire_p2)
	}
}

[game="Star Hawk"]
{
	[config="Default"]
	{
		bin_coin=(zvgemu_coin)
		bin_start1=(zvgemu_start1)
		bin_start2=(zvgemu_start2)
		bin_rslow=()
		bin_rmedium=(zvgemu_action_p1)
		bin_rfast=()
		bin_rup=(zvgemu_up_p1)
		bin_rdown=(zvgemu_down_p1)
		bin_rleft=(zvgemu_left_p1)
		bin_rright=(zvgemu_right_p1)
		bin_rfire=(zvgemu_fire_p1)
		bin_lslow=()
		bin_lmedium=(zvgemu_action_p2)
		bin_lfast=()
		bin_lup=(zvgemu_up_p2)
		bin_ldown=(zvgemu_down_p2)
		bin_lleft=(zvgemu_left_p2)
		bin_lright=(zvgemu_right_p2)
		bin_lfire=(zvgemu_fire_p2)
	}
}

[game="Omega Race"]
{
	[config="Default"]
	{
		bin_coin1=(zvgemu_coin1)
		bin_coin2=(zvgemu_coin2)
		bin_tilt=(zvgemu_diagstep)
		bin_fire=(zvgemu_fire)
		bin_thrust=(zvgemu_action)
		bin_left=(zvgemu_left)
		bin_right=(zvgemu_right)
		bin_start2=(zvgemu_start2)
		bin_start2=(zvgemu_start2)
	}
}

[game="Star Wars"]
{
	[config="Default"]
	{
		ana_horizontal=(zvgemu_ana_horiz)
		ana_vertical=(zvgemu_ana_vert)
		bin_left=(zvgemu_left_no_ana)
		bin_right=(zvgemu_right_no_ana)
		bin_up=(zvgemu_up_no_ana)
		bin_down=(zvgemu_down_no_ana) 
		bin_lfiresw=(zvgemu_fire_p1)
		bin_rfiresw=(zvgemu_fire_p1)
		bin_auxcoin=(bin_key_4, bin_key_f4)
		bin_coin=(zvgemu_coin)
		bin_coin=(zvgemu_coin)
		bin_lthumb=(zvgemu_action_p1)
		bin_rthumb=(zvgemu_action_p2)
		bin_diagstep=(zvgemu_diagstep)
	}
}

[game="Quantum"]
{
	[config="Default"]
	{
		bin_lcoin=(zvgemu_coin1)
		bin_rcoin=(zvgemu_coin2)
		bin_start2=(zvgemu_start2)
		bin_start1=(zvgemu_start1)
		bal_trackx=(bal_mouse_ballisticsx)
		bal_tracky=(bal_mouse_ballisticsy)
	}
}

/* End Of Line */
